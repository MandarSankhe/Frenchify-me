type Mutation {
  createUser(input: UserInput!): User
  login(email: String!, password: String!): User
  forgotPassword(email: String!): String
  resetPassword(token: String!, newPassword: String!): String
}

input UserInput {
  username: String!
  email: String!
  password: String!
  languageLevel: String
}

type User {
  id: ID!
  username: String!
  email: String!
  languageLevel: String
  progress: Progress!
  createdAt: String!
}

type Progress {
  reading: Int
  writing: Int
  listening: Int
  speaking: Int
}

# Simplified TCFReading type
type TCFReading {
  id: ID!
  title: String!
  documents: [DocumentSet!]!
  level: String!
  createdAt: String!
}

type DocumentSet {
  document: Document!
  questions: [Question!]!
}

type Document {
  title: String!
  type: String!
  content: String!
}

type Question {
  questionText: String!
  options: [String!]!
  correctAnswer: String!
}

type Query {
  users: [User]
  tcfReadings: [TCFReading]
}
